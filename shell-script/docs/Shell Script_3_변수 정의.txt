3. 변수 정의

===============================
>> A = 1
>> echo $A
1
===============================
변수값을 호출할 때 변수 이름 뒤에 바로 따르는 문자 또는 문자열이 있다면
변수 이름과 구분 짓기 위해 중괄호 {}를 사용할 수 있다.

사용자로부터 값을 받기 : read

디버그 옵션 -x

환경변수 조회(set, env) : set --> 로컬 환경변수, env --> 글로벌 환경변수


 * set /unset 명령
 set 명령은 정의된 변수를 확인하기 위해 또는 쉘 스크립트를 디버깅하기 위해 사용될 수 있는
        bash 쉘의 내장 명령(Built-in Command).
        사용자 정의 함수, 별칭(aliases) 목록을 알려준다. 
 unset 명령은 변수를 해제하는 명령.
 ===============================
>> NAME=rob
>> set | grep ^NAME= 
#여기서 ^NAME=은 정규표현식이다.
===============================

 - 주요 환경변수 = 예약변수(Reserved Variables) - 
HOSTNAME : 호스트 이름
HOME : 사용자 홈 디렉토리
PATH : 실행파일을 찾는 경로
LANG : 프로그램 사용시 기본으로 지원되는 언어
PWD : 현재 작업 디렉토리
TERM : 로그인 터미널 타입
SHELL : 사용하는 쉘
USER : 사용자 이름
HISFILE : history 파일 경로
HISTSIZE : history 파일 크기
BASH : 사용하는 bash 쉘 경로

 - 쉘 프롬포트 변경 -
 PS1 변수에 저장되어 있음

 * Positional Parameter ( 위치 파라미터 )
 위치 파라미터는 명령 이름(쉘 스크립트 파일명이라고 보면 됨)과 명령에 따라오는 인자를 가리키는 변수가 있음.
 $0 : 명령어 이름
 ${N} : $1은 첫번째 인자, $2는 두번째 인자....
 $# : 인자의 총 수를 반환
 $* : 모든 인자를 반환
 $@ : 모든 인자를 반환
Java의 main() 함수에서 String[] args와 비슷하다고 보면 됨

* 특수 명령
$$ : 현재 쉘의 PID 반환
$? : 가장 최근에 전면부로 실행한 명령의 exit 상태를 반환. 0은 명령 실행 성공, 0이 아닌 다른 수는 실패
$! : 마지막 백그라운드로 실행되었던 작업의 PID를 반환
        PID : 현재 프로세스에 대한 ID

 * 별칭
추가 : alias 별칭이름='명령어'
조회 : alias 별칭이름
삭제 : unalias 별칭이름